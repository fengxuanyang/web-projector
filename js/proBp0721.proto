package airsync;

option java_package = "com.ragentek.airsync.protobuf";
option java_outer_classname = "ProBp";

// 数据组织格式：CmdId(2 bytes) + data(详细见CmdId中的定义)
enum CmdId{
	NONE = 0;

	// REQ: 微信网页 -> 投影仪
	REQ_KEY_INPUT = 101;		// data is KeyInputRequest.class
	REQ_TEXT_INPUT = 102;		// data is TextInputRequest.class
	REQ_FILE_MANAGER = 103; 	// data is BaseRequest.class
	REQ_WIFI = 104;				// data is WifiRequest.class
	REQ_IP = 105;				// data is BaseRequest.class
	REQ_SCREEN_SYNC = 106;		// data is BaseRequest.class
	REQ_WIFIAP_HISTORY = 107;	// data is BaseRequest.class
	REQ_DEVICE_INFO = 108;		// data is BaseRequest.class

	// RESP: 投影仪 -> 微信网页
	RESP_KEY_INPUT = 201; 		// data is BaseResponse.class
	RESP_TEXT_INPUT = 202;		// data is BaseResponse.class
	RESP_FILE_MANAGER = 203;	// data is FileManagerResponse.class
	RESP_WIFI = 204;			// data is WifiResponse.class
	RESP_IP = 205;				// data is IpResponse.class
	RESP_SCREEN_SYNC = 206;		// data is BaseResponse.class
	RESP_WIFIAP_HISTORY = 207;	// data is WifiApHistoryResponse.class
	RESP_DEVICE_INFO = 208;		// data is DeviceInfoResponse.class

	// PUSH: 投影仪 -> 微信网页
	PUSH_EDIT_FOCUS_CHANGE = 301;	// data is EditFocusChangePush.class
}

message BaseRequest {
}

message BaseResponse {
	required int32 ErrCode = 1;
	optional string ErrMsg = 2;
}

message BasePush {
}

enum KeyCode {
	POWER = 1;
	HOME = 2;
	MENU = 3;
	BACK = 4;
	OK = 5;
	VOLUME_UP = 6;
	VOLUME_DOME = 7;
	UPWARD = 8;
	DOWNWARD = 9;
	TOLEFT = 10;
	TORIGHT = 11;
}

message KeyInputRequest {
	required BaseRequest BaseRequest = 1;
	required KeyCode code = 2;	//按键对应的枚举值
}

message TextInputRequest {
	required BaseRequest BaseRequest = 1;
	required string text = 2;	// 文本字符串
}

message FileManagerResponse {
	required BaseResponse BaseResponse = 1;
	optional string url = 2;	// 文件管理网址，如果投影仪没有开启该功能，该字段为空
}

enum FocusSate {
	TRUE = 1;
	FALSE = 2;
}

message EditFocusChangePush {
	required BasePush BasePush = 1;
	required FocusSate focus = 2;	// 是否处于焦点状态
	optional string text = 3; 	// 如果处于焦点状态，会将编辑框的文本返回，可能为空
}

enum WifiOperation {
	SCAN = 1;
	CONNECT = 2;
	FORCE_CONNECT = 3;
	FORGET = 4;
}

message WifiRequest {
	required BaseRequest BaseRequest = 1;
	required WifiOperation operation = 2;	// wifi请求的操作
	optional int32 networkId = 3;	// wifi节点唯一标识，连接，遗忘操作时必须指定
	optional string ssid = 4;		// wifi ssi，强制连接必须指定
	optional string password = 5;	// 连接如果需要wifi密码，则设置此参数
}

enum WifiState {
	ACTIVE = 1;
	INACTIVE = 2;
	SAVED = 3;
}

message WifiInfo {
	required string ssid = 1;		// wifi ssid
	required int32 networkId = 2;	// wifi节点唯一标识
	required bool isSecurity = 3;	// 是否需要密码
	required int32 rssi = 4;		// wifi信号强度
	required WifiState state = 5;	// wifi连接状态
}

message WifiResponse {
	required BaseResponse BaseResponse = 1;
	repeated WifiInfo wifiInfo = 2;		// wifi节点列表
}

message IpResponse {
	required BaseResponse BaseResponse = 1;
	required string ip = 2;		// ip地址
}


message WifiApInfo {
	required string ssid = 1;		// wifi ssid
	required string password = 2;	// wifi密码
}

message WifiApHistoryResponse {
	required BaseResponse BaseResponse = 1;
	repeated WifiApInfo wifiApInfo = 2;		// wifi节点列表
}

message DeviceInfoResponse {
	required BaseResponse BaseResponse = 1;
	required string model = 2;
	required string swVersion = 3;
	optional string extraData =4 ;
}


